
   (i save the timing information for profiling here, ignore this file)


TODO: some day all these stuff will be automated.



// ALL NEW TESTS SHOULD USE DEFAULT -mx and -ms parameters
// see 'time.bat'

******************************************************
Queen times:


ZDD 

N	[1]	[2]	[3]	[4]
7	60	60	70	55
8	161	130	160	115
9	461	401	441	365
10	1933	1752	1882	1610
11	9234	8762	8712	8660
12	57422	55470	55400	59135

[1] with cache
[2] with new cache and new nodeHT
[3] + free nodes sorted on age (Geerts idea), maybe changed nodetable-size
[4] HT bug fix
------------------------------------------------

ZDDCSP

N	[1]	[2]	[3]	[4]	[5]
7	61	70	70	70	65	
8	90	130	120	121	100	
9	301	260	241	250	235
10	1212	1101	1101	1061	965
11	6379	5388	4972	5087	4480
12	37093	2894	27980	28191	26900

[1] old ZDDCSP (?) no cache:
[2] old ZDDCSP with cache:
[3] ZDDCSP with new cache and new nodeHT
[4] 3 + free nodes sorted on age, slower due to changed nodetable-size 
[5] HT bug fix

------------------------------------------------

BDD

N	[1]	[2]	[3]	[4]	[5]	[6]	[7]	[8]	[9]	[10]
7	211	165	130	125	110	110	85	90	80	80
8	351	345	355	315	300	300	220	200	175	170
9	1522	1325	1342	1335	1282	1270	920	901	750	731
10	6529	5940	5960	5340	5060	5060	4125	4100	3630	3384
11	28872	27345	27390	26565	26285	26190	22130	22055	18500	18236
12	MEMOUT	???	???	173339	180309	175000	153160	148250	132000	128800
[1] BDD with cache
[2] new cache and some minor modifications
[3] 2 + free nodes sorted
[4] HT find_or_insert() bug fix
[5] Cache not entirly cleaned anymore, Cache uses better validation code
[6] Cache-bug from [5] fixed, I think :)
[7] new SimpleCache + new growing decision in SimpleCaches
[8] NEW JDK!!! also changed Array.copy() and Array.set() functions, they get more correct but a little bit slower :(
[9] the old dme1.trace bug FIXED! [no, not really /Arash ] plus some other tweaks and bugs smashed 
[10] dont know, probably JDK upgrade

******************************************************


times for BDDSolver.java (before simple variable ordering was added)

MODEL	SAT	[0]	[1]	[1.5]	[2]	[3]
Q8	Y	-	1222	1242	1412	1372	
50a	Y	-	10	20	20	20	
50b	N	-	110	10	20	20	
100a	N	610	110	120	120	120	
100b	Y	616607	59556	57983	28240	39397(?)
200	Y	140	50	50	50	50	


[0] old numbers (for JDD before optimization and bug fixes)
[1] original benchmark
[1.5] [2] without youngest node
[2] new cahce, youngest node in gc(), minor modifications
[3] rec-calls flipping u1/u2 + simple reordering also in nodeHT


times for BDDSolver.java (after simple variable ordering was added)

MODEL	SAT	[4]	[5]	[6]	[7]	[8]
Q8	Y	1643	1643	1643	1292	1252
50a	Y	10	20	21	20	20
50b	N	10	10	10	10	20
100a	N	20	20	40	30	20
100b	Y	991(!)	881	881	1061	1052
200	Y	50	50	50	50	50

[4] on demand variable allocation
[5] cache validation bugfix + some other stuff
[6] new terminal cases added, CNF now validates formulas!
[7] new SimpleCache + new growing decision in SimpleCaches
[8] NEW JDK!!! also changed Array.copy() and Array.set() functions,  now more correct but a little bit slower :(

-------------------------------------------------------------

other tools:

MODEL	SAT	JavaBDD		JBDD
Q8	Y	-		-
50a	Y	-		-
50b	N	-		-
100a	N	260		90
100b	Y	210413		94246
200	Y	110		60



javaBDD times for N Queens, on a laptop
N	Java	CUDD	BuDDY
7
8
9
10
11
12
