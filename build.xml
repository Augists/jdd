<?xml version="1.0"?>
<!-- This is the build.xml file for ANT  -->



<project name="JDD" default="compile" basedir=".">

 <!-- some variables -->
 <property name="dir.src" value="src"/>
 <property name="dir.data" value="data"/>

 <property name="dir.build" value="build/classes"/>
 <property name="dir.javadoc" value="build/javadoc"/>
 <property name="dir.dist" value="build/dist"/>



 <!-- define Maven coordinates -->
 <property name="groupId" value="org.bitbucket" />
 <property name="artifactId" value="jdd" />
 <property name="version" value="108" />

 <!-- define artifacts' name, which follows the convention of Maven -->
 <property name="pom" value="${dir.dist}/${artifactId}-${version}.pom" />
 <property name="jar" value="${dir.dist}/${artifactId}-${version}.jar" />
 <property name="tgz" value="${dir.dist}/${artifactId}-${version}.tgz" />
 <property name="javadoc-jar" value="${dir.dist}/${artifactId}-${version}-javadoc.jar" />
 <property name="sources-jar" value="${dir.dist}/${artifactId}-${version}-sources.jar" />


 <!-- <property name="build.compiler" value="jikes" /> --> <!-- remove this if you dont have jikes ! -->
 <property name="build.compiler.emacs" Value="true" /> <!-- emacs style error reports from jikes -->

<!-- targets -->
 <target name="help">
  <echo message="current ANT targets for the JDD project are:" />
  <echo message="compile     -- compiles the JDD code" />
  <echo message="clean       -- clean up" />
  <echo message="dist        -- creates the distribution file" />
  <echo message="test        -- runs all the tests" />
  <echo message="jretest     -- some JRE profiling tests..." />
 </target>

 <target name="init">
  <mkdir dir="${dir.build}" />
 </target>

 <target name="clean">
  <delete dir="${dir.build}" />
  <delete dir="${dir.javadoc}" />
  <delete dir="${dir.dist}" />
 </target>

 <target name="compile" depends="init">
   <javac encoding="ISO8859-1" deprecation="no" optimize="no" srcdir="${dir.src}" destdir="${dir.build}" />
 </target>

 <!-- create javadoc -->
 <target name="doc">
   <javadoc destdir="${dir.javadoc}" noindex="true" nohelp="true" >
     <packageset dir="${dir.src}">
     </packageset>

     <link  href="http://java.sun.com/j2se/1.5.0/docs/api" packagelistLoc="." />
     <doctitle><![CDATA[<h1>JDD API documentation</h1><br>
     JDD is a native java library for Binary Decision Diagram and more]]></doctitle>
     <bottom><![CDATA[<i>This file is a part of the JDD package, a native
     <a target=_blank href="http://javadd.sf.net/jdd">Java Binary Decision Diagram Library</a>.</i>]]></bottom>
   </javadoc>
 </target>

 <!-- create distribution files -->
 <target name="dist" depends="clean,compile,doc">

   <!-- create a JAR file -->
   <jar destfile="${jar}">
     <fileset dir="${dir.build}" >
       <exclude name="jdd/internal/**" />
     </fileset>
   </jar>

   <!-- javadoc -->
   <jar destfile="${javadoc-jar}">
     <fileset dir="${dir.javadoc}">
       <include name="**" />
     </fileset>
   </jar>

   <!-- source  -->
   <jar destfile="${sources-jar}">
     <fileset dir=".">
       <include name="${dir.src}/**" />
       <include name="${dir.data}/**" />
       <include name="build.xml" />
       <include name="pom.xml" />
     </fileset>
   </jar>

   <!-- binary -->
   <tar destfile="tmp.tar" >
       <tarfileset dir="." >
         <include name="${jar}" />
         <include name="${sources-jar}" />
         <include name="${javadoc-jar}" />
       </tarfileset>
   </tar>
   <gzip destfile="${tgz}" src="tmp.tar" />
   <delete file="tmp.tar" />

   <!-- pom file -->
   <copy file="pom.xml" tofile="${pom}"/>

 </target>


 <!-- ALL TEST GOES HERE -->
 <target name="test" depends="compile">
  <!-- we shouldnt have FORK here, but it solves the problem of stupid ANT aking over Class.forName() for us -->
  <java classname="jdd.internal.tests.RunTests" fork="yes" classpath="${dir.build}" />
 </target>


 <target name="bug" depends="compile">
  <!-- no bugs today -->
 </target>

 <target name="jretest" depends="compile">
  <java classname="jdd.util.jre.JRETest" classpath="${dir.build}" />
 </target>

 <!-- run the internal profiler -->
 <target name="profile" depends="compile">
   <java classname="jdd.internal.profiler.ProfilerGUI" fork="yes" classpath="${dir.build}" />
 </target>

<!-- run the hash test-->
 <target name="hashtest" depends="compile">
   <java classname="jdd.internal.hashtest.HashTest" fork="yes" classpath="${dir.build}" />
 </target>


</project>
